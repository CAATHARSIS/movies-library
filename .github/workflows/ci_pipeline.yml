name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  REGESTRY: docker.io
  IMAGE_NAME: murl0ck/movies-library

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
      - name: Install dependencies
        run: go mod download
      - name: Run Unit Tests
        run: go test -v ./...

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:test .
  
  docker-publish:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERGUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@V4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGESTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGESTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGESTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registryl,ref=$${{ env.REGESTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
